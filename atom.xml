<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>H.Lの自习室</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="1l1.lol/"/>
  <updated>2017-06-12T03:18:36.572Z</updated>
  <id>1l1.lol/</id>
  
  <author>
    <name>Haolu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搜索命令</title>
    <link href="1l1.lol/2017/06/11/%E6%90%9C%E7%B4%A2%E5%91%BD%E4%BB%A4/"/>
    <id>1l1.lol/2017/06/11/搜索命令/</id>
    <published>2017-06-10T19:38:26.000Z</published>
    <updated>2017-06-12T03:18:36.572Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><code>find</code>用来在指定目录下查找文件</p>
<p><code>which</code>用于查找并显示给定命令的绝对路径,环境变量PATH中保存了查找命令时需要遍历的目录</p>
<p><code>whereis</code> 用来定位指令的二进制程序,源代码文件和man手册页等相关文件的路径</p>
<p><code>locate</code> 需要安装（yum install -y mlocate）与whereis类似也需要有同样的数据库才可以搜索每晚24点自动更新</p>
</blockquote>
<a id="more"></a>
<p>语法</p>
<p><code>find(选项)(参数)</code></p>
<p>列出当前目录及子目录下所有文件和文件夹</p>
<p><code>find .</code></p>
<p>在/home目录下查找以.txt结尾的文件名</p>
<p><code>find /home -name &quot;*.txt&quot;</code></p>
<p>同上，但忽略大小写</p>
<p><code>find /home -iname &quot;*.txt</code></p>
<p>根据文件类型进行搜索</p>
<p><code>find . -type 类型参数</code></p>
<p>类型参数列表： </p>
<ul>
<li><p>f 普通文件</p>
</li>
<li><p>l 符号连接 </p>
</li>
<li><p>d 目录 </p>
</li>
<li><p>c 字符设备</p>
</li>
<li><p>b 块设备 </p>
</li>
<li><p>s 套接字 </p>
</li>
<li><p>p Fifo</p>
</li>
</ul>
<p>根据文件时间戳进行搜索 </p>
<p><code>find . -type f 时间戳</code></p>
<p>UNIX/Linux文件系统每个文件都有三种时间戳：</p>
<ul>
<li><p>访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间</p>
</li>
<li><p>。 修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间</p>
</li>
<li><p>变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;find&lt;/code&gt;用来在指定目录下查找文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;which&lt;/code&gt;用于查找并显示给定命令的绝对路径,环境变量PATH中保存了查找命令时需要遍历的目录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;whereis&lt;/code&gt; 用来定位指令的二进制程序,源代码文件和man手册页等相关文件的路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;locate&lt;/code&gt; 需要安装（yum install -y mlocate）与whereis类似也需要有同样的数据库才可以搜索每晚24点自动更新&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="command" scheme="1l1.lol/tags/command/"/>
    
      <category term="search" scheme="1l1.lol/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>软硬链接</title>
    <link href="1l1.lol/2017/06/09/%E8%BD%AF%E7%A1%AC%E9%93%BE%E6%8E%A5/"/>
    <id>1l1.lol/2017/06/09/软硬链接/</id>
    <published>2017-06-09T07:33:22.000Z</published>
    <updated>2017-06-11T20:42:15.384Z</updated>
    
    <content type="html"><![CDATA[<p></p><h6>软链接</h6><p></p>
<blockquote>
<p>软链接可以看作是Windows中的快捷方式,可以让你快速链接到目标档案或目录.软链接建立一个独立的文件,而这个文件会让数据的读取指向它link的那个档案的档名,由于只是作为指向的动作,所以当来源档案被删除之后,软连接的档案无法开启,因为找不到原始档名.连结档的内容只有档名,根据档名链接到正确的目录进一步取得目标档案的inode,最终就能够读取到正确的数据.如果目标档案的原始档名被删除了那么整个环节就进行不下去了.<br><a id="more"></a></p>
</blockquote>
<p>创建软链接</p>
<p><code>ln -s /文件&amp;目录</code></p>
<div class="tip"><br><br><p>以路径的形式存在。类似于Windows操作系统中的快捷方式</p><br><br>软链接可以 跨文件系统 ，硬链接不可以<br><br>软链接可以对一个不存在的文件名进行链接<br><br>软链接可以对目录进行链接<br></div>

<p></p><h6>硬链接</h6><p></p>
<blockquote>
<p>硬链接不支持对目录做硬链接,只对文件有支持.硬链接是复制了源文件两个互为硬链接.</p>
</blockquote>
<p>创建软链接<br><code>ln 111.txt 222.txt</code></p>
<div class="tip"><br><p>硬链接，以文件副本的形式存在。但不占用实际空间</p><br><br>不允许给目录创建硬链接<br><br>硬链接只有在同一个文件系统中才能创建<br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;h6&gt;软链接&lt;/h6&gt;&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;软链接可以看作是Windows中的快捷方式,可以让你快速链接到目标档案或目录.软链接建立一个独立的文件,而这个文件会让数据的读取指向它link的那个档案的档名,由于只是作为指向的动作,所以当来源档案被删除之后,软连接的档案无法开启,因为找不到原始档名.连结档的内容只有档名,根据档名链接到正确的目录进一步取得目标档案的inode,最终就能够读取到正确的数据.如果目标档案的原始档名被删除了那么整个环节就进行不下去了.&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="1l1.lol/tags/Linux/"/>
    
      <category term="软链接" scheme="1l1.lol/tags/%E8%BD%AF%E9%93%BE%E6%8E%A5/"/>
    
      <category term="硬链接" scheme="1l1.lol/tags/%E7%A1%AC%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>特殊权限</title>
    <link href="1l1.lol/2017/06/09/%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/"/>
    <id>1l1.lol/2017/06/09/特殊权限/</id>
    <published>2017-06-09T04:38:26.000Z</published>
    <updated>2017-06-11T20:55:27.550Z</updated>
    
    <content type="html"><![CDATA[<h6>set_uid</h6><br>当普通用户需要更改密码,但是密码文件<code>/usr/bin/passwd</code>文件权限又是000,所以便有了s权限,passwd这个文件拥有set_uid权限,当普通用户执行带sit_uid权限的命令时候遍拥有了root用户的权限.<br><br><a id="more"></a><br><br><code>[][[]root[]@Enn []~[]]$ which passwd</code><br><br><code>/usr/bin/passwd</code><br><br><code>[][[]root[]@Enn []~[]]$ ls -l</code><br><br><code>/usr/bin/paspasswd</code><br><br><code>[[]root[]@Enn []~[]]$ ls -l</code><br><br><code>/usr/bin/passwd</code><br><br><code>-rwsr-xr-x 1 root root 25980 Nov 24  2015 /usr/bin/passwd</code><br><br>s权限便是set_uid权限<br><br><code>[][[]root[]@Enn []~[]]$ ls</code><br><br><code>/etc/shadow</code><br><br><code>/etc/shadow</code><br><br>shadow为密码文件<br><br><code>[][[]root[]@Enn []~[]]$ ls -l !$</code><br><br><code>ls -l /etc/shadow</code><br><br><code>---------- 1 root root 630 May 24 15:25 /etc/shadow</code><br><br>更改set-uid权限<br><br><code>chmod u=rws /usr/bin/ls</code><br><code>-rwSr-xr-x 1 root root 25980 Nov 24  2015 /usr/bin/ls</code><br><br>这时候权限变成了S权限 因为没有x权限<br><br><code>chmod u+s /urs/bin/ls</code><br><code>-rwsr-xr-x 1 root root 25980 Nov 24  2015 /usr/bin/ls</code><br><br>这个便有了小s权限 区别和大s一样<br><br><br><div class="tip"><br><br><p>必须是二进制文件</p><br><br>必须是可执行文件<br><br>其他非root其他用户执行带set_uid命令时临时拥有root用户的身份<br></div><br><br><br><h6>set_gid</h6><br>&gt;可以作用在文件和目录上,如果作用在文件上与set_uid作用类似,可以让执行这个文件的普通用户临时拥有所属组的身份,当作用在目录时设置set_gid后创建子目录以及文件的所属组会继承父目录保持一致。<br><br><code>[][[]root[]@Enn []~[]]# chmod  u=rwx /usr/bin/ls</code><br><br><code>[][[]root[]@Enn []~[]]# chmod g+s /usr/bin/ls</code><br><br><code>[][[]root[]@Enn []~[]]# ls -l /usr/bin/ls</code><br><br><code>-rwxr-sr-x. 1 root root 25980 Nov 24  2015 /usr/bin/ls</code><br><br><div class="tip"><br><br><p>不同的是set_gid是作用在组上,使普通用户临时拥有所属组的身份以及权限</p><br><br>不用于更换了角色<br><br>set_gid用户拥有所有组的权限<br><br></div><br><br><h6>set_bit</h6>

<blockquote>
<p>stick_bit任何人对目录可写,但是别人无法删除文件所有者的文件,防止别人删除,如果删除的文件的目录有写入权限,则可以删除.</p>
</blockquote>
<p><code>[][[]root[]@Enn []~[]]$ ls -ld /tmp/</code></p>
<p><code>drwxrwxrwt. 3 root root 4096 Jun 12 03:07 /tmp/</code></p>
<div class="tip"><br><br><p>非root用户无法删除</p><br><br></div>]]></content>
    
    <summary type="html">
    
      &lt;h6&gt;set_uid&lt;/h6&gt;&lt;br&gt;当普通用户需要更改密码,但是密码文件&lt;code&gt;/usr/bin/passwd&lt;/code&gt;文件权限又是000,所以便有了s权限,passwd这个文件拥有set_uid权限,当普通用户执行带sit_uid权限的命令时候遍拥有了root用户的权限.&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="set_uid" scheme="1l1.lol/tags/set-uid/"/>
    
      <category term="set_gid" scheme="1l1.lol/tags/set-gid/"/>
    
      <category term="set_bit" scheme="1l1.lol/tags/set-bit/"/>
    
  </entry>
  
  <entry>
    <title>Linux修改终端颜色</title>
    <link href="1l1.lol/2017/05/08/%E4%BF%AE%E6%94%B9%E7%BB%88%E7%AB%AF%E9%A2%9C%E8%89%B2/"/>
    <id>1l1.lol/2017/05/08/修改终端颜色/</id>
    <published>2017-05-08T09:39:08.000Z</published>
    <updated>2017-06-11T20:12:24.450Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>要修改linux终端命令行颜色，我们需要用到PS1，PS1是Linux终端用户的一个环境变量，用来说明命令行提示符的设置。<br>在终端输入命令：<code>#set</code>即可在输出中找到关于PS1的定义如下：</p>
</blockquote>
<a id="more"></a>
<p><code> PS1=’[\u@\h \W]\$ ‘<br>　　PS1的定义中个常用的参数的含义如下：　　<br>　　\d ：#代表日期，格式为weekday month date<br>　　例如：”Mon Aug 1”<br>　　\H ：#完整的主机名称<br>　　\h ：#仅取主机的第一个名字<br>　　\t ：#显示时间为24小时格式，如：HH：MM：SS<br>　　\T ：#显示时间为12小时格式<br>　　\A ：#显示时间为24小时格式：HH：MM<br>　　\u ：#当前用户的账号名称<br>　　\v ：#BASH的版本信息<br>　　\w ：#完整的工作目录名称<br>　　\W ：#利用basename取得工作目录名称，所以只会列出最后一个目录<br>　　# ：#下达的第几个命令<br>　　\$ ：#提示字符，如果是root时，提示符为：# ，普通用户则为：$</code><br>　<br>修改.bashrc文件<br>　　通过上面的设置只能改变当前终端的命令行格式，关闭这个终端，在重新打开的一个终端中命令行格式又会恢复到默认的形式。想要永久性的改变终端命令行格式，需要修改.bashrc文件。<br>　　<br>　　使用命令：<br>　　<code>cd /</code><br>　　<br>　　<code>ls -l -a</code><br>　　<br>　　就能看到.bashrc这个文件。<br>　　　　<br>　　使用命令<br>　　<code>#vim .bashrc</code><br>　　<br>　　在.bashrc文件中加入<br>　　<br>　　<code>PS1=”[\e[33;40m][[\e[32;40m]\u[\e[33;40m]@\h [\e[35;40m]\W[\e[0m]]\$ “</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;要修改linux终端命令行颜色，我们需要用到PS1，PS1是Linux终端用户的一个环境变量，用来说明命令行提示符的设置。&lt;br&gt;在终端输入命令：&lt;code&gt;#set&lt;/code&gt;即可在输出中找到关于PS1的定义如下：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="1l1.lol/tags/Linux/"/>
    
      <category term="Terminal" scheme="1l1.lol/tags/Terminal/"/>
    
  </entry>
  
  <entry>
    <title>MAC地址修改</title>
    <link href="1l1.lol/2017/05/01/MAC%E5%9C%B0%E5%9D%80%E4%BF%AE%E6%94%B9/"/>
    <id>1l1.lol/2017/05/01/MAC地址修改/</id>
    <published>2017-05-01T04:38:26.000Z</published>
    <updated>2017-06-11T20:12:24.545Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>终端方式:</p>
<p><code>openssl rand -hex 6 | sed ‘s/(..)/\1:/g; s/.$//‘</code></p>
<p>运行这个生成一个新的Mac网卡地址</p>
<p>然后执行</p>
<p><code>sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z</code><br><a id="more"></a></p>
</blockquote>
<p>断开Airport无线网卡连接.</p>
<p> <code>sudo ifconfig en0 ether d4:33:a3:ed:f2:12</code></p>
<p>输入修改mac地址的命令</p>
<p><code>networksetup -detectnewhardware&lt;/code</code></p>
<p>然后重连网卡即可.</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;终端方式:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;openssl rand -hex 6 | sed ‘s/(..)/\1:/g; s/.$//‘&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行这个生成一个新的Mac网卡地址&lt;/p&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="1l1.lol/tags/linux/"/>
    
      <category term="Mac" scheme="1l1.lol/tags/Mac/"/>
    
  </entry>
  
</feed>
